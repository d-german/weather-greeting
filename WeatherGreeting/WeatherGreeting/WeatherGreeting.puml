@startuml
!theme crt-green

note bottom of GreetingService
 Aggregation implies a relationship where the child can exist
 independently of the parent.
 Example: Class (parent) and Student (child).
 Delete the Class and the Students still exist.
 GreetingService can exist separate from WeatherGreeting.
end note

note right of WeatherGreeting::WeatherGreeting
constructor injection
end note

class WeatherGreeting {
    - readonly GreetingService _greetingService
    - readonly WeatherService _weatherService
    - readonly LocationService _locationService
    + WeatherGreeting(GreetingService greetingService, WeatherService weatherService, LocationService locationService)
    + string TransmitGreeting(string location, DateTime? time)
}

class GreetingService {
+ void TransmitGreeting(string greeting)
}

class WeatherService {
+ WeatherData FetchWeatherData(MapPoint mapPoint, DateTime dateTime)
}

class LocationService {
+ MapPoint GetLocation(string location)
}

WeatherGreeting o--- GreetingService : aggregation
WeatherGreeting o--- WeatherService : aggregation
WeatherGreeting o--- LocationService : aggregation
@enduml
